// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace microsoft_hackathon_roi_calculator.MigrationService.Migrations
{
    [DbContext(typeof(CalculatorDbContext))]
    partial class CalculatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("microsoft_hackathon_roi_calculator.Core.Models.Metrics.CostBenefitMetrics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CostOfInvestment")
                        .HasColumnType("float");

                    b.Property<double>("NetBenefit")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CostBenefitMetrics");
                });

            modelBuilder.Entity("microsoft_hackathon_roi_calculator.Core.Models.Metrics.EmployeeMetrics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeesUsingNewTool")
                        .HasColumnType("int");

                    b.Property<int>("TotalEmployees")
                        .HasColumnType("int");

                    b.Property<int>("TotalHoursWorkedWeekly")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmployeeMetrics");
                });

            modelBuilder.Entity("microsoft_hackathon_roi_calculator.Core.Models.Metrics.ImplementationMetrics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TotalChangeImplementationTime")
                        .HasColumnType("int");

                    b.Property<int>("TotalPlannedImplementationTime")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ImplementationMetrics");
                });

            modelBuilder.Entity("microsoft_hackathon_roi_calculator.Core.Models.Metrics.ProcessMetrics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompliantProcesses")
                        .HasColumnType("int");

                    b.Property<int>("TotalProcesses")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProcessMetrics");
                });

            modelBuilder.Entity("microsoft_hackathon_roi_calculator.Core.Models.Metrics.ResponseMetrics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PositiveResponses")
                        .HasColumnType("int");

                    b.Property<int>("SumOfAllScores")
                        .HasColumnType("int");

                    b.Property<int>("TotalResponses")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ResponseMetrics");
                });

            modelBuilder.Entity("microsoft_hackathon_roi_calculator.Core.Models.Metrics.TrainingMetrics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompletedTraining")
                        .HasColumnType("int");

                    b.Property<int>("EnrolledTraining")
                        .HasColumnType("int");

                    b.Property<int>("PostTrainingScore")
                        .HasColumnType("int");

                    b.Property<int>("PreTrainingScore")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TrainingMetrics");
                });

            modelBuilder.Entity("microsoft_hackathon_roi_calculator.Core.Models.ROIModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CostBenefitMetricsId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeMetricsId")
                        .HasColumnType("int");

                    b.Property<int?>("ImplementationMetricsId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<int?>("ProcessMetricsId")
                        .HasColumnType("int");

                    b.Property<double>("ProjectBudget")
                        .HasColumnType("float");

                    b.Property<int>("ProjectDurationMonths")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResponseMetricsId")
                        .HasColumnType("int");

                    b.Property<int?>("TrainingMetricsId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CostBenefitMetricsId");

                    b.HasIndex("EmployeeMetricsId");

                    b.HasIndex("ImplementationMetricsId");

                    b.HasIndex("ProcessMetricsId");

                    b.HasIndex("ResponseMetricsId");

                    b.HasIndex("TrainingMetricsId");

                    b.ToTable("ProjectROIs");
                });

            modelBuilder.Entity("microsoft_hackathon_roi_calculator.Core.Models.ROIModel", b =>
                {
                    b.HasOne("microsoft_hackathon_roi_calculator.Core.Models.Metrics.CostBenefitMetrics", "CostBenefitMetrics")
                        .WithMany()
                        .HasForeignKey("CostBenefitMetricsId");

                    b.HasOne("microsoft_hackathon_roi_calculator.Core.Models.Metrics.EmployeeMetrics", "EmployeeMetrics")
                        .WithMany()
                        .HasForeignKey("EmployeeMetricsId");

                    b.HasOne("microsoft_hackathon_roi_calculator.Core.Models.Metrics.ImplementationMetrics", "ImplementationMetrics")
                        .WithMany()
                        .HasForeignKey("ImplementationMetricsId");

                    b.HasOne("microsoft_hackathon_roi_calculator.Core.Models.Metrics.ProcessMetrics", "ProcessMetrics")
                        .WithMany()
                        .HasForeignKey("ProcessMetricsId");

                    b.HasOne("microsoft_hackathon_roi_calculator.Core.Models.Metrics.ResponseMetrics", "ResponseMetrics")
                        .WithMany()
                        .HasForeignKey("ResponseMetricsId");

                    b.HasOne("microsoft_hackathon_roi_calculator.Core.Models.Metrics.TrainingMetrics", "TrainingMetrics")
                        .WithMany()
                        .HasForeignKey("TrainingMetricsId");

                    b.Navigation("CostBenefitMetrics");

                    b.Navigation("EmployeeMetrics");

                    b.Navigation("ImplementationMetrics");

                    b.Navigation("ProcessMetrics");

                    b.Navigation("ResponseMetrics");

                    b.Navigation("TrainingMetrics");
                });
#pragma warning restore 612, 618
        }
    }
}
