@page "/projects"

@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Projetos Cadastrados</h3>
<FluentCard Height="auto" Style="margin: 1rem;">
	<FluentAccordion>
		<FluentAccordionItem Heading="Filter(s)" Expanded="true">
			<FluentIcon Value="@(new Icons.Regular.Size20.FilterAdd())" Color="@Color.Neutral" Slot="start" />
			<FluentGrid Spacing="1" Justify="Microsoft.FluentUI.AspNetCore.Components.JustifyContent.FlexStart" Style="padding: 5px;">
				<FluentGridItem xs="12" sm="6" md="4">
					<FluentTextField @bind-Value=_projectName Label="Nome do Projeto"></FluentTextField>
				</FluentGridItem>
			</FluentGrid>
			<FluentStack Orientation="Microsoft.FluentUI.AspNetCore.Components.Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.End">
				<FluentButton IconStart="@(new Icons.Regular.Size16.Broom())"
							  Disabled="loading"
							  OnClick="ClearFilters">
					Clear
				</FluentButton>
				<FluentButton IconStart="@(new Icons.Regular.Size16.Search())"
							  Appearance="Appearance.Accent"
							  Loading="loading"
							  OnClick="DataGridRefreshDataAsync">
					Search
				</FluentButton>
			</FluentStack>
		</FluentAccordionItem>
	</FluentAccordion>
	<FluentDataGrid @ref="dataGrid"
					Items="projects"
					OnRowDoubleClick="@(()=>Console.WriteLine("Row double clicked!"))"
					ItemSize="46"
					GenerateHeader="GenerateHeaderOption.Sticky"
					TGridItem="ProjectROI"
					Loading="loading"
					Pagination="pagination">
		<PropertyColumn Title="ID" Property="@(c => c!.Id)" />
		<PropertyColumn Property="@(c => c!.ProjectName)" Style="color: #af5f00" />
		<PropertyColumn Property="@(c => c!.ProjectBudget)" />
		<PropertyColumn Title="NumberOfEmployees" Property="@(c => c!.NumberOfEmployees)" Tooltip="true" />
		<PropertyColumn Property="@(c => c!.ROI)" />
		@* <PropertyColumn Title="Termination Date" Property="@(c => c!.NumberOfEmployees)" SortBy="@(new ColumnKeyGridSort<FoodRecall>("termination_date"))" Sortable="true" /> *@
		<TemplateColumn Title="Actions" Align="@Align.End">
			<FluentButton aria-label="Edit item" IconEnd="@(new Icons.Regular.Size16.Edit())" OnClick="@(() => Console.WriteLine("Edit clicked"))" />
			<FluentButton aria-label="Delete item" IconEnd="@(new Icons.Regular.Size16.Delete())" OnClick="@(() => Console.WriteLine("Delete clicked"))" />
		</TemplateColumn>
	</FluentDataGrid>
	<FluentPaginator State="@pagination" />
	<FluentButton Appearance="Appearance.Accent" @onclick="Register">Cadastrar</FluentButton>
</FluentCard>

@code {
	FluentDataGrid<ProjectROI> dataGrid = default!;
	IQueryable<ProjectROI> projects = default!;
	bool loading = true;
	string? _projectName = "";

	PaginationState pagination = new PaginationState { ItemsPerPage = 10 };

	protected override async Task OnInitializedAsync()
	{
		await LoadProjects();
	}

	private async Task LoadProjects()
	{
		loading = true;
		await InvokeAsync(StateHasChanged);

		var response = await Http.GetFromJsonAsync<ProjectROI[]>("https://localhost:7288/api/roi");

		projects = response!.AsQueryable();
		await pagination.SetTotalItemCountAsync(response!.Length);

		loading = false;
		await InvokeAsync(StateHasChanged);
	}

	public void ClearFilters()
	{
		_projectName = null;
	}

	public async Task DataGridRefreshDataAsync()
	{
		await dataGrid.RefreshDataAsync(true);
	}

	private void Register()
	{
		Navigation.NavigateTo("/register");
	}
}
